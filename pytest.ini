[pytest]
# Pytest configuration for Argus UAV Remote ID defense system

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Coverage configuration
addopts =
    --verbose
    --strict-markers
    --cov=argus
    --cov-report=term-missing
    --cov-report=html:htmlcov
    # Coverage goal: 80% (aspirational)
    # Current: ~12% (core modules tested, integrations via examples)
    # For research projects, functional demos > test coverage

# Markers for categorizing tests
markers =
    unit: Unit tests for individual components
    integration: Integration tests for end-to-end scenarios
    contract: Contract tests for interface compliance
    performance: Performance benchmarks and profiling
    slow: Tests that take significant time to run

# Logging
log_cli = false
log_cli_level = INFO
log_file = tests.log
log_file_level = DEBUG

# Coverage options
[coverage:run]
source = argus
omit =
    */tests/*
    */conftest.py
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract


